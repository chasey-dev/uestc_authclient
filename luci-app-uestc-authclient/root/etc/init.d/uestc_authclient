#!/bin/sh /etc/rc.common

#--------------------------------------------------------------------
#  init.d script for uestcâ€‘authclient  (OpenWrt / procd)
#  Manages multiple authentication client sessions
#  Usage: /etc/init.d/uestc_authclient {start|stop|restart|...}
#--------------------------------------------------------------------
START=99
STOP=10
USE_PROCD=1

MANAGER="/usr/bin/uestc_authclient_manager.sh"  # session manager script

# logging / i18n helpers
. /usr/lib/uestc_authclient/log_utils.sh 2>/dev/null || true
. /usr/lib/uestc_authclient/i18n.sh      2>/dev/null || true

boot() {
    # optional global switch
    global_enabled=$(uci -q get uestc_authclient.global.enabled)
    if [ -n "$global_enabled" ] && [ "$global_enabled" != "1" ]; then
        log_message "$MSG_SERVICE_DISABLED"
        return
    fi
    start
}

start_service() {
    # give system 2s to settle networking / time sync
    sleep 2

    log_message "$MSG_SERVICE_STARTED"

    procd_open_instance
    procd_set_param command "$MANAGER" start
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_close_instance
}

stop_service() {
    log_message "$MSG_SERVICE_STOPPED"
    # Stop all sessions
    "$MANAGER" stop
}

reload_service() {
    stop
    start
}

service_triggers() {
    procd_add_reload_trigger "uestc_authclient"
}

# Add extra commands for session control
extra_command "start_session" "Start a specific session"
extra_command "stop_session" "Stop a specific session"
extra_command "restart_session" "Restart a specific session"
extra_command "get_status" "Get status of a specific session (get status of all sessions by default)"
extra_command "get_logs" "Get logs from a specific session (get global logs by default)"

start_session() {
    "$MANAGER" start "$1"
}

stop_session() {
    "$MANAGER" stop "$1"
}

restart_session() {
    "$MANAGER" restart "$1"
}

get_status() {
    "$MANAGER" status "$1"
}

get_logs() {
    "$MANAGER" log "$1"
}
